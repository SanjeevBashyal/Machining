# Generated from Gcode.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,9,75,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,1,0,1,0,1,1,1,1,4,1,24,8,1,11,1,12,1,25,1,
        2,1,2,4,2,30,8,2,11,2,12,2,31,1,3,1,3,4,3,36,8,3,11,3,12,3,37,1,
        4,1,4,3,4,42,8,4,1,4,5,4,45,8,4,10,4,12,4,48,9,4,1,4,3,4,51,8,4,
        1,4,5,4,54,8,4,10,4,12,4,57,9,4,1,5,1,5,1,6,1,6,1,7,1,7,5,7,65,8,
        7,10,7,12,7,68,9,7,1,7,1,7,1,8,1,8,1,8,1,8,0,0,9,1,1,3,2,5,3,7,4,
        9,5,11,6,13,7,15,8,17,9,1,0,5,1,0,48,57,4,0,68,68,71,72,77,77,84,
        84,4,0,70,70,73,75,80,83,88,90,2,0,10,10,13,13,3,0,9,10,13,13,32,
        32,82,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,1,19,1,0,0,
        0,3,21,1,0,0,0,5,27,1,0,0,0,7,33,1,0,0,0,9,39,1,0,0,0,11,58,1,0,
        0,0,13,60,1,0,0,0,15,62,1,0,0,0,17,71,1,0,0,0,19,20,5,59,0,0,20,
        2,1,0,0,0,21,23,5,79,0,0,22,24,7,0,0,0,23,22,1,0,0,0,24,25,1,0,0,
        0,25,23,1,0,0,0,25,26,1,0,0,0,26,4,1,0,0,0,27,29,5,78,0,0,28,30,
        7,0,0,0,29,28,1,0,0,0,30,31,1,0,0,0,31,29,1,0,0,0,31,32,1,0,0,0,
        32,6,1,0,0,0,33,35,7,1,0,0,34,36,7,0,0,0,35,34,1,0,0,0,36,37,1,0,
        0,0,37,35,1,0,0,0,37,38,1,0,0,0,38,8,1,0,0,0,39,41,7,2,0,0,40,42,
        3,13,6,0,41,40,1,0,0,0,41,42,1,0,0,0,42,46,1,0,0,0,43,45,7,0,0,0,
        44,43,1,0,0,0,45,48,1,0,0,0,46,44,1,0,0,0,46,47,1,0,0,0,47,50,1,
        0,0,0,48,46,1,0,0,0,49,51,3,11,5,0,50,49,1,0,0,0,50,51,1,0,0,0,51,
        55,1,0,0,0,52,54,7,0,0,0,53,52,1,0,0,0,54,57,1,0,0,0,55,53,1,0,0,
        0,55,56,1,0,0,0,56,10,1,0,0,0,57,55,1,0,0,0,58,59,5,46,0,0,59,12,
        1,0,0,0,60,61,5,45,0,0,61,14,1,0,0,0,62,66,5,40,0,0,63,65,8,3,0,
        0,64,63,1,0,0,0,65,68,1,0,0,0,66,64,1,0,0,0,66,67,1,0,0,0,67,69,
        1,0,0,0,68,66,1,0,0,0,69,70,5,41,0,0,70,16,1,0,0,0,71,72,7,4,0,0,
        72,73,1,0,0,0,73,74,6,8,0,0,74,18,1,0,0,0,9,0,25,31,37,41,46,50,
        55,66,1,0,1,0
    ]

class GcodeLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    OID = 2
    NID = 3
    GID = 4
    PID = 5
    DOT = 6
    NEG = 7
    COMMENT = 8
    WS = 9

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'.'", "'-'" ]

    symbolicNames = [ "<INVALID>",
            "OID", "NID", "GID", "PID", "DOT", "NEG", "COMMENT", "WS" ]

    ruleNames = [ "T__0", "OID", "NID", "GID", "PID", "DOT", "NEG", "COMMENT", 
                  "WS" ]

    grammarFileName = "Gcode.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


